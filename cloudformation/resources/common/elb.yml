LoadBalancer:
  Type: AWS::ElasticLoadBalancingV2::LoadBalancer
  Properties:
    IpAddressType: ipv4
    Name:
      Fn::Sub: ${Name}-elb
    Scheme: internet-facing
    SecurityGroups:
      - Ref: HttpSecurityGroup
    Subnets:
      - Ref: VPCPublicSubnet1
      - Ref: VPCPublicSubnet2
    Type: application

HttpListener:
  Type: AWS::ElasticLoadBalancingV2::Listener
  Properties:
    DefaultActions:
      - Type: "redirect"
        RedirectConfig:
          Protocol: "HTTPS"
          Port: 443
          Host: "#{host}"
          Path: "/#{path}"
          Query: "#{query}"
          StatusCode: "HTTP_301"
    LoadBalancerArn:
      Ref: LoadBalancer
    Port: 80
    Protocol: HTTP

HttpsListener:
  Type: AWS::ElasticLoadBalancingV2::Listener
  Properties:
    Certificates:
      - CertificateArn: !Ref ElbCert
    DefaultActions:
      - Type: "forward"
        TargetGroupArn:
          Ref: TargetGroup
    LoadBalancerArn:
      Ref: LoadBalancer
    Port: 443
    Protocol: HTTPS

ElbDnsRecord:
  Type: AWS::Route53::RecordSet
  Properties:
    AliasTarget:
      DNSName:
        Fn::GetAtt:
          - LoadBalancer
          - DNSName
      EvaluateTargetHealth: false
      HostedZoneId:
        Fn::GetAtt:
          - LoadBalancer
          - CanonicalHostedZoneID
    HostedZoneName:
      Fn::Sub: ${HostedZoneName}.
    Name:
      Ref: WebUrl
    Type: A
